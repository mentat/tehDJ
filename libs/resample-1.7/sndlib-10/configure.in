dnl Process this file with autoconf to produce a configure script.

AC_INIT(io.c)
AC_CANONICAL_HOST
AC_CONFIG_HEADER(config.h)

AC_ARG_WITH(alsa,
    	[  --with-alsa		  use ALSA if possible],
   	use_alsa="$withval",use_alsa=no)

AC_ARG_WITH(guile,
	[  --without-guile	  omit Guile even if it is available],
	use_guile="$withval",use_guile=yes)

AC_ARG_WITH(clm,
	[  --without-clm	  don't include the CLM module],
        use_clm="$withval",use_clm=yes)

AC_ARG_WITH(doubles,
	[  --with-doubles         use doubles throughout],
 	use_doubles="$withval",use_doubles=no)
if test "$use_doubles" = y || test "$use_doubles" = yes; then
  AC_DEFINE(Float,double)
else
  AC_DEFINE(Float,float)
fi

AC_ARG_WITH(float-samples,
	[  --with-float-samples	  use floats as the internal sample respresentation],
  	if test "$with_float_samples" = y || test "$with_float_samples" = yes; then
	    AC_DEFINE(SNDLIB_USE_FLOATS)
	fi)

GDBM_LIB=""
AC_ARG_WITH(gdbm,
	[  --with-gdbm		  use gdbm to handle sound file header data],
  	if test "$with_gdbm" = y || test "$with_gdbm" = yes; then
	    AC_DEFINE(HAVE_GDBM)
            GDBM_LIB="-lgdbm"
	fi)
AC_SUBST(GDBM_LIB)

AC_ARG_WITH(shared,
	[  --without-shared	  don't make sndlib.so],
	with_shared="$withval",with_shared=yes)


AC_PROG_CC
AC_PROG_INSTALL

AC_CHECK_LIB(m,main)
AC_CHECK_LIB(c,main)
AC_CHECK_LIB(dl,main)

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h string.h sys/soundcard.h soundcard.h machine/soundcard.h libc.h sched.h)
AC_CHECK_HEADER(/usr/local/lib/oss/include/sys/soundcard.h,[AC_DEFINE(USR_LOCAL_LIB_OSS)])
AC_CHECK_HEADER(/usr/lib/oss/include/sys/soundcard.h,[AC_DEFINE(USR_LIB_OSS)])
AC_CHECK_HEADER(/opt/oss/include/sys/soundcard.h,[AC_DEFINE(OPT_OSS)])

AC_C_CONST
AC_TYPE_MODE_T
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_STRUCT_TM
AC_C_BIGENDIAN

AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(char)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(int *)

AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_CHECK_FUNCS(getcwd strerror strtok)
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_VPRINTF

GUILE_LDFLAGS=""
GUILE_CFLAGS=""
CLM_O_FILES=""

got_clm=no
if test "$use_guile" = y || test "$use_guile" = yes; then
  dnl guile-1.3/guile.m4
  AC_MSG_CHECKING(for Guile)
  if (guile-config link > /dev/null) 2>&1; then
    GUILE_CONFIG_works=yes
  else
    GUILE_CONFIG_works=no
  fi
  AC_MSG_RESULT($GUILE_CONFIG_works)

  if test $GUILE_CONFIG_works = yes; then
    GUILE_CFLAGS="`guile-config compile`"
    GUILE_LDFLAGS="`guile-config link`"
    AC_SUBST(GUILE_CFLAGS)
    AC_SUBST(GUILE_LDFLAGS)
    AC_DEFINE(HAVE_GUILE)
    
    if test "`guile -c '(display (string>=? (version) "1.3"))'`" != "#t"; then
      echo "Sndlib needs Guile 1.3 or later";
    else
      if test "$use_clm" = y || test "$use_clm" = yes; then
        got_clm=yes	
        AC_DEFINE(WITH_MUS_MODULE)
        CLM_O_FILES="clm.o clm2scm.o"
      fi
      dnl look for new (1.3.2) guile smob creator
      dnl attempt to use AC_CHECK_LIB here failed because of confusion over multiple versions
      if test "`guile -c '(display (string=? (version) "1.3"))'`" = "#t"; then
        echo found old version 1.3 Guile library
        AC_DEFINE(HAVE_GUILE_1_3_0,1)
      fi
      if test "`guile -c '(display (string>? (version) "1.3.4"))'`" = "#t"; then
        echo found brand-new version 1.4 Guile library
        AC_DEFINE(HAVE_GUILE_1_4,1)
      fi
    fi
  fi
fi
if test "$use_clm" = y || test "$use_clm" = yes; then
  if test $got_clm = no; then
    CLM_O_FILES="clm.o"
  fi
fi
AC_SUBST(CLM_O_FILES)

dnl SGI specialty
AUDIO_LIB=""
AC_CHECK_LIB(audio,main,[
AUDIO_LIB="-laudio"
])
AC_SUBST(AUDIO_LIB)

LDSO_FLAGS=""
if test "$with_shared" = y || test "$with_shared" = yes; then
  SO_LD="ld"
  SO_INSTALL="install"
else
  SO_LD=":"
  SO_INSTALL=":"
fi

A_LD_FLAGS=""
A_LD="ld"
LIB_NAME="sndlib.so"

dnl we need the sndlib.h equivalents to try to find the native sound support (see config.guess)
dnl this only matters for those cases where we've implemented the audio code in audio.c
dnl test for ALSA courtesy of Paul Barton-Davis
audio_system="unknown"
case "$host" in
    *-*-linux*) 
	AC_DEFINE(LINUX)
        LDSO_FLAGS="-shared"
        AC_CHECK_LIB(asound,main,[ 
	if test "$use_alsa" = yes ; then 
	       audio_system=ALSA;
	       AC_DEFINE(HAVE_ALSA)
	       AUDIO_LIB="-lasound"
	       AC_SUBST(AUDIO_LIB)
	else 
	       echo "ALSA appears to be installed, but you asked for OSS";
	       audio_system=OSS;
        fi
],[ 
audio_system=OSS
])
	if test $audio_system != OSS ; then
		AC_CHECK_HEADER(sys/asoundlib.h, [
:
],[ 
if test $audio_system = ALSA ; then
   echo "I can't find the ALSA library - falling back to OSS"; 
   audio_system=OSS;
fi
])
	fi
	;;
    *-*-sunos4*) 
        AC_DEFINE(SUN)
	audio_system=Sun
        ;;
    *-*-solaris*) 
        AC_DEFINE(SOLARIS)
	AC_DEFINE(SUN)
	audio_system=Sun
	LDSO_FLAGS="-G"
        ;;
    *-*-hpux*) 
        AC_DEFINE(HPUX)
	audio_system=Hpux
	LDSO_FLAGS="+z -Ae +DA1.1"
        ;;
    *-next*) 
        AC_DEFINE(NEXT)
	audio_system=NeXT
	SO_INSTALL=":"
	SO_LD=":"
	LIB_NAME="sndlib.a"
        ;;
    *-sgi*) 
        AC_DEFINE(SGI)
	audio_system=SGI
        LDSO_FLAGS="-shared -all"
	SO_INSTALL=":"
	SO_LD=":"
	A_LD_FLAGS="-non_shared"
	LIB_NAME="sndlib.a"
	# to get this to work in both cases, we'd need to run all the cc cases twice with/out -shared as in libtool
        ;;
    alpha*) 
        AC_DEFINE(ALPHA)
        ;;
    *-*-openbsd*) 
        AC_DEFINE(OPENBSD)
	audio_system=Sun
        ;;
    *-*-sco*) 
        AC_DEFINE(SCO5)
	audio_system=OSS
	LDSO_FLAGS="-belf -dy -Bdynamic -G"
        ;;
    *-*-beos) 
        AC_DEFINE(BEOS)
	audio_system=Be
        ;;
    *-*-cygwin*)
	AC_DEFINE(WINDOZE)
	audio_system=Windoze
	LDSO_FLAGS="-D_MT -MD -nologo -LD -Zi -W3"
	;;
    *-aix*) 
        AC_DEFINE(AIX)
	audio_system=aix
        ;;

esac
AC_MSG_CHECKING([for audio system])
AC_MSG_RESULT($audio_system)
AC_SUBST(LDSO_FLAGS)
AC_SUBST(SO_INSTALL)
AC_SUBST(SO_LD)
AC_SUBST(A_LD)
AC_SUBST(A_LD_FLAGS)
AC_SUBST(LIB_NAME)

AC_OUTPUT(makefile)

